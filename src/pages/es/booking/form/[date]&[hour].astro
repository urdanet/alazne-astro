---
export const prerender = false;
import Layout from '@layouts/Layout.astro';

const date  = Astro.params.date ? Astro.params.date : '';
const date_text = new Date(date).toLocaleDateString('es-ES', {
  day: '2-digit',
  month: '2-digit',
  year: 'numeric'
});

const hour = Astro.params.hour ? Astro.params.hour : '';
const hourValue = decodeURIComponent(hour);

---

<Layout>
  <div class="container mx-auto px-4 py-12 max-w-2xl">
    <div class="bg-white shadow-xl rounded-2xl p-8 border border-gray-100">
      <h1 class="text-3xl font-bold mb-6 text-gray-800 border-b pb-4">Confirma tu reserva</h1>
      
      <div class="mb-8 bg-gray-50 p-4 rounded-lg border-l-4 border-red-500">
        <p class="text-gray-700">
          Has seleccionado: <span class="font-semibold text-red-600">{hourValue}</span> el día <span class="font-semibold text-red-600">{date_text}</span>
        </p>
      </div>

      <form action="/api/reservas" method="POST" class="space-y-6">
        <input type="hidden" name="date" value={date} />
        <input type="hidden" name="hour" value={hourValue} />

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div class="space-y-2">
            <label for="nombre" class="block font-medium text-gray-700 text-sm">Nombre</label>
            <input id="nombre" name="nombre" type="text" required
                  class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-red-500 focus:border-red-500 transition duration-200 bg-gray-50 hover:bg-white" />
          </div>

          <div class="space-y-2">
            <label for="apellidos" class="block font-medium text-gray-700 text-sm">Apellidos</label>
            <input id="apellidos" name="apellidos" type="text" required
                  class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-red-500 focus:border-red-500 transition duration-200 bg-gray-50 hover:bg-white" />
          </div>
        </div>

        <div class="space-y-2">
          <label for="telefono" class="block font-medium text-gray-700 text-sm">Teléfono</label>
          <div class="relative">
            <span class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none text-gray-500">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
              </svg>
            </span>
            <input id="telefono" name="telefono" type="tel" required oninput="telefono_format()"
                  class="w-full pl-10 pr-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-red-500 focus:border-red-500 transition duration-200 bg-gray-50 hover:bg-white" />
          </div>
        </div>

        <div class="space-y-2">
          <label for="email" class="block font-medium text-gray-700 text-sm">Email</label>
          <div class="relative">
            <span class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none text-gray-500">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
              </svg>
            </span>
            <input id="email" name="email" type="email" required
                  class="w-full pl-10 pr-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-red-500 focus:border-red-500 transition duration-200 bg-gray-50 hover:bg-white" />
          </div>
        </div>

        <div class="pt-4">
          <button type="submit"
                class="w-full bg-red-500 text-white px-6 py-3 rounded-lg hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition duration-300 transform hover:-translate-y-1 shadow-md">
            Confirmar cita
          </button>
        </div>
      </form>
    </div>
  </div>
</Layout>

<script is:inline>  
  function telefono_format(){
    // Eliminar caracteres no numéricos, dejar escpacio de 3 dígitos
    // y limitar a 9 dígitos
    const input = document.getElementById("telefono");
    if (input) {
      let value = input.value.replace(/\D/g, "").substring(0, 9);
      if (value.length > 3) {
        value = value.substring(0, 3) + " " + value.substring(3);
      }
      if (value.length > 7) {
        value = value.substring(0, 7) + " " + value.substring(7);
      }
      input.value = value;
    }
  }
</script>

<script> 
  import { enviarReserva } from "@scripts/reserva.ts";
  const lang = window.location.pathname.split("/")[1];

  console.log("Idioma actual:", lang);
  const form = document.querySelector("form") as HTMLFormElement;

  form?.addEventListener("submit", async (e) => {
    e.preventDefault();

    const formData = new FormData(form);
    const nombre = formData.get("nombre")?.toString() ?? "";
    const apellidos = formData.get("apellidos")?.toString() ?? "";
    const telefono = formData.get("telefono")?.toString() ?? "";
    const email = formData.get("email")?.toString() ?? "";
    const fecha_hora_inicio = `${formData.get("date")} ${formData.get("hour")}`;

    const payload = { nombre, apellidos, telefono, email, fecha_hora_inicio };
    console.log("Enviando reserva con los siguientes datos:", payload);
    const res = await enviarReserva(payload);

    if (res.success) {
      const new_page = `/${lang}/booking/confirm`;
      window.location.href = new_page;
      console.log("✅ Reserva realizada con éxito:", res.data);
    } else {
      const new_page = `/${lang}/booking/denied`;
      window.location.href = new_page;
      console.error("❌ Error al realizar la reserva:", res.data);
    }
  });
</script>